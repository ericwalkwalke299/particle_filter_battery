clc
clear all
close all
% Eric Walker 
% review response

%% PF He, et al model

%Load the data set.

load(['B0005.mat']);
load(['B0007.mat']);

theta=[-9.86e-7,5.752e-2,8.983e-1,-8.34e-4]';

first_batt = (-9.86e-7) * exp(5.752e-2 * (1:200)) + (8.983e-1) ...
    * exp((-8.340e-4) * (1:200)) + 0.001*randn(1,200);

second_batt = (-9.86e-7) * exp(5.752e-2 * (1:200)) + (8.983e-1) ...
    * exp((-8.340e-4) * (1:200)) + 0.001*randn(1,200);

theta=[-9.86e-7,5.752e-2,8.983e-1,-8.34e-4]';

%PF 
theta_set=repmat(theta,1,100);
theta_set(1,1:100) = theta(1) + theta(1)/10 * (0.5-rand(100,1));
theta_set(2,1:100) = theta(2) + theta(2)/10 * (0.5-rand(100,1));
theta_set(3,1:100) = theta(3) + theta(3)/10 * (0.5-rand(100,1));
theta_set(4,1:100) = theta(4) + theta(4)/10 * (0.5-rand(100,1));
weights = 0.01 * ones(1,100);

tic
for j = 1:100
    choose_par(j,:) = theta_set(1,j) * exp(theta_set(2,j) * ...
        (1:250)) + theta_set(3,j) * exp(theta_set(4,j)*(1:250));
    RULs(j)         = find(choose_par(j,:) <= 0.8*(second_batt(1)),1);
end

sigma = 0.1;
for i = 1:200
    if i ==50
        weights_50 = weights;
    end
    
    % Get the likelihood
    likelihood = 1/(sigma*sqrt(2*pi)) * exp(-1/2 * ...
        ((second_batt(i)) - (theta_set(1,:) .* exp(theta_set(2,:)...
        * i) + theta_set(3,:) .* exp(theta_set(4,:) * i))).^2 /...
        sigma^2);
    % Update the weights
    weights = weights .* likelihood;
    weights = weights / sum(weights);
end
disp('PF time He, et al')
toc
[RULs, ind] = sort(RULs);
weights_50s = weights_50(ind);

figure

xlabel('k, Cycle index (cycle)')
ylabel('Capacity (Ah)')
axis square
hold on 

plot(1:50, second_batt(1:50),'k.')
plot(50:length(second_batt), second_batt(50:end),'k*')

% Make them range from 0 to 1, otherwise they will be light.
col = colormap;
for j = 1:100

    plot(1:50,choose_par(j,1:50),'color',col(ceil(64*(weights_50(j)/max...
        (weights_50))),:)); % Smaller numbers are darker.

end
caxis([-1 1])
colorbar('YTickLabel',{0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1})
plot(1:50, second_batt(1:50),'k.')
plot(50:length(second_batt), second_batt(50:end),'k*')
legend('observations', 'future observations')
plot([1,200],second_batt(1)*0.8*[1,1],'k-','linewidth',1.5)
text(25,second_batt(1)*0.81,'EUL failure threshold')
axis([0 200 0.65, 0.91])
%title('PF tracking four states, five percent particle variation')
xlabel('k, Cycle index (cycle)')
ylabel('Q, Capacity (Ah)')
axis square
box on
figure
[f] = ksdensity(RULs','function','pdf','weights',weights_50s);
plot(RULs', f,'k-', 'linewidth', 2)
xlim([175 200])
xlabel('k, Cycle index (cycle)')
ylabel('probability density')
hold on
plot([190,190],[0,max(f)],'b')

expecHe = sum(weights_50s.*RULs);
plot([expecHe, expecHe],[0,max(f)],'g')
legend('prediction pdf','observation','expected value of pdf')

err_early = sum(weights_50s.*RULs)-190

sig_early = sqrt(sum(weights_50s.*(RULs - (err_early + 190)).^2) )

%% PF Equivalent circuit model
clear all
load(['B0006.mat']);

global first_discharge_time first_discharge_current...
    first_discharge_voltage;
first_discharge_voltage = B0006.cycle(1,2).data.Voltage_measured(3:end);
first_discharge_time    = B0006.cycle(1,2).data.Time(3:end);
first_discharge_current = B0006.cycle(1,2).data.Current_measured(3:end);


[ecm, resnorm, residuals] = lsqnonlin( @ecm_obj_fun, ...
    [1.17e-8, 2.1, 1795.6, 0.28],[0 0 0 0], [1, 2.5, 2000, 1]);  
second_discharge_voltage = B0006.cycle(1,4).data.Voltage_measured(3:end);
second_discharge_time    = B0006.cycle(1,4).data.Time(3:end);
second_discharge_current = B0006.cycle(1,4).data.Current_measured(3:end);
second_discharge_time    = [second_discharge_time ...
    (second_discharge_time(1:30) + second_discharge_time(end))];
second_discharge_current = [second_discharge_current ...
    second_discharge_current(1:30)];


% PF
sigma = 0.0015;

%In the following lines, set the IG and variation percent.
R = ecm(1) + ecm(1)/10*(0.5-rand(1,50));
Q = ecm(2) + ecm(2)/10*(0.5-rand(1,50));
C = ecm(3)  + ecm(3)/10*(0.5-rand(1,50));
R_ct = ecm(4) + ecm(4)/10*(0.5-rand(1,50));


weights = 0.02*ones(1,50);
V_cell_storage = [];
tic
for i = 1:224
    % Get the likelihood
    % Quantity inside the square, first
    SOC_cell = 1 + second_discharge_current(i) ./ (Q*3600) .* ...
        second_discharge_time(i);

    SOC_n = 0.79.*SOC_cell + 0.01;
    SOC_p = 0.97-0.51*SOC_cell;
    
    x_nsurf = SOC_n;
    x_psurf_set = SOC_p;
    
    U_n     = .7222 + .1387*x_nsurf + .029*x_nsurf.^0.5 - ...
        .0172./x_nsurf + .0019./x_nsurf.^1.5 + .2808 * exp(0.9-...
        15*x_nsurf) -.7984 * exp (0.4465*x_nsurf - 0.4108);
    
    U_p_set     = ( -4.656 + 88.669 * x_psurf_set.^2 - 401.119 * ...
        x_psurf_set.^4 + 342.909 * ...
        x_psurf_set.^6 - 462.471 * x_psurf_set.^8 + 433.434 * ...
        x_psurf_set.^10 ) ./ ...
        ( -1 + 18.933*x_psurf_set.^2 - 79.532 * x_psurf_set.^4 + ...
        37.311 * x_psurf_set.^6 ...
        - 73.083 * x_psurf_set.^8 + 95.96*x_psurf_set.^10 );
    
    V_o = U_p_set - U_n ;
    
    V_cell = V_o + second_discharge_current(i)*R + Q./C .* ...
        exp(-second_discharge_time(i)./(R_ct .* C))...
        + second_discharge_current(i).*R_ct.*(1-exp(...
        -second_discharge_time(i)./(R_ct .* C)));
    V_cell_storage = [V_cell_storage; V_cell];
  
    if i<=194
    quantity = (second_discharge_voltage(i) - V_cell).^2;
    likelihood = 1./(sigma*1.5*sqrt(2*pi)) .* exp(-1/2 * ...
        (quantity).^2 ./ (sigma*1.5)^2);
    % Update the weights
    weights = weights .* likelihood;
    weights = weights/sum(weights);
    end
    if i == 50
        weights_50 = weights;
    end


end

for j = 1:50
    EODs(j) = find(V_cell_storage(:,j) <= 2.5,1);
    V_cell_storage(EODs(j):end,j) = 0;
end
disp('ECM PF time')
toc

[EODs ind] = sort(EODs);
weights_50s = weights_50(ind);


figure
hold on
plot(second_discharge_time(EODs), weights_50s*5 + 2.5,...
    'k-','linewidth',2)
plot(second_discharge_time(1:length(second_discharge_voltage)),...
    second_discharge_voltage, 'ko', 'linewidth', 1.5)
axis([0 4250 2.4 4])
plot([1,4250],2.5*[1,1],'k-','linewidth',1.5) % The EODV line.
text(25,2.55,'EODV failure threshold')
axis square
box on
%title('5 percent variation correct IG')
xlabel('Time (s)')
ylabel('Voltage (V)')
legend('PF prediction 928.6 (s)', 'observations')
col = colormap;
for j=1:50
    plot(second_discharge_time(1:50), V_cell_storage(1:50,j),...
        'color', col(ceil(64*(weights_50(j)/max...
        (weights_50))),:));
 
end

caxis([-1 1])
colorbar('YTickLabel',{0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1})
plot(second_discharge_time(EODs), weights_50s*5 + 2.5,'k-',...
    'linewidth',2)
plot(second_discharge_time(1:length(second_discharge_voltage))...
    ,second_discharge_voltage, 'ko', 'linewidth', 1.5)
figure

[f,xf] = ksdensity(second_discharge_time(EODs),...
    'function','pdf','weights',weights_50s);
plot(xf, f,'k-', 'linewidth', 2)

xlabel('Time (s)')
ylabel('probability density')
hold on
plot([3690,3690],[0,max(f)],'b')

expecECM = sum(weights_50s.*second_discharge_time(EODs));
plot([expecECM, expecECM],[0,max(f)],'g')
legend('prediction pdf','observation','expected value of pdf')


err_early = sum(weights_50.*second_discharge_time(EODs))-3690

sig_early = sqrt(sum(weights_50.*(second_discharge_time(EODs) -...
    (err_early + 3690)).^2) )

sum(weights_50.*second_discharge_time(EODs));



%%  PF Single Particle model

S_n    = 0.2604;
S_p    = 0.2570;
k_n    = 37.4312e-12;
k_p    = 17.4733e-12;
R_n    = 2e-6;
R_p    = 2e-6;
D_n    = 29.0798e-15;
D_p    = 27.9034e-15;
c_nmax = 30074.5;
c_pmax = 51563.5;
c_e    = 1000;
x_navg = 0.9401;
x_pavg = 0.5169;
T      = 298.15;
R_g    = 8.3143;
F      = 96485;
alpha_a  = 0.5;
alpha_c  = 0.5;

S_n    = S_n + S_n/10 * (0.5-rand(50,1));
S_p    = S_p + S_p/10 * (0.5-rand(50,1));
x_navg = x_navg + x_navg/10 * (0.5-rand(50,1));
x_pavg = x_pavg + x_pavg/10 * (0.5-rand(50,1));
weights    = 0.02*ones(1,50);

stop_cycle = length(second_discharge_voltage)+29;
tic
for i = 1:stop_cycle

    Iapp = second_discharge_current(i);
    J_n  = -Iapp./S_n;
    J_p  = Iapp./S_p;
    x_nsurf = x_navg - ( J_n * R_n ) / ( 5 * F * D_n * c_nmax);
    x_psurf = x_pavg - ( J_p * R_p ) / ( 5 * F * D_p * c_pmax);

    U_n     = .8214 + .1387*x_nsurf + .029*x_nsurf.^0.5 - .0172./...
        x_nsurf + ...
        .0019./x_nsurf.^1.5 + .2808 * exp(0.9-15*x_nsurf) -.7984 ...
        * exp (...
        0.4465*x_nsurf - 0.4108);
    
    U_p     = ( -4.8801 + 88.669 * x_psurf.^2 - 401.119 * x_psurf.^4 ...
    + 342.909 * ...
        x_psurf.^6 - 462.471 * x_psurf.^8 + 433.434 * x_psurf.^10 )...
        ./ ...
        ( -1 + 18.933*x_psurf.^2 - 79.532 * x_psurf.^4 + 37.311 *...
        x_psurf.^6 ...
        - 73.083 * x_psurf.^8 + 95.96*x_psurf.^10 );
    eta_n   = R_g * T ./ (F * alpha_a) .* log( ( J_n + (-4*c_e*...
        F.^2*c_nmax.^2*k_n.^2.*x_nsurf.^2 ...
       + 4*c_e*F^2*c_nmax.^2*k_n.^2.*x_nsurf+J_n.^2).^0.5 ) ./ ...
       (2*F*c_e^0.5*k_n.*(c_nmax.*x_nsurf).^0.5 .* ...
       (c_nmax-c_nmax.*x_nsurf).^0.5) );
   
    eta_p   = R_g * T / (F * alpha_c) .* log( ( J_p + (-4*c_e...
        *F^2*c_pmax^2*k_p^2.*x_psurf.^2 ...
       + 4*c_e*F^2*c_pmax^2*k_p^2.*x_psurf+J_p.^2).^0.5 ) ./ ...
       (2*F*c_e^0.5*k_p.*(c_pmax.*x_psurf).^0.5 .* ...
       (c_pmax-c_pmax.*x_psurf).^0.5) );
   
    V_cell_set(i,:) = real(U_p + eta_p - U_n - eta_n);
    
    x_navg    = x_navg - 3 * J_n / (F * R_n * c_nmax) ;
    x_pavg    = x_pavg - 3 * J_p / (F * R_p * c_pmax) ;
end

for j = 1:50
    try
        EOD(j) = find(V_cell_set(:,j) <= 2.5,1);
    catch
        EOD(j) = EOD(j-1);
    end
    V_cell_set(EOD(j):end,j) = 0;
end

for i=1:(stop_cycle-29)

    weights         = 1/(0.04*sqrt(2*pi)).*exp(-(V_cell_set(i,:)...
        -second_discharge_voltage(i)).^2/(2*0.04^2));
    weights   = weights/sum(weights) ;

    
    if i==50
            weights_50 = weights;

    end


end
disp('SP PF time')
toc


figure
axis square
[EOD ind] = sort(EOD);
weights_50s = weights_50(ind);


hold on
box on
xlabel('Time(s)');
ylabel('Voltage(V)');
% plot(second_discharge_time(EOD),weights_50s*5+2.5, 'k-',...
%     'linewidth', 2)
plot(second_discharge_time(1:50),...
    second_discharge_voltage(1:50), 'k.')
plot(second_discharge_time(50:length(second_discharge_voltage)),...
    second_discharge_voltage(50:end), 'k*')

col = colormap;
for j=1:50
    plot(second_discharge_time(1:50), V_cell_set(1:50,j),...
        'color', col(1+ceil(62*(weights_50(j)-min(weights_50))./(max...
        (weights_50)-min(weights_50))),:));
 
end

caxis([-1 1])
colorbar('YTickLabel',{0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1})
plot(second_discharge_time(1:50),...
    second_discharge_voltage(1:50), 'k.')

legend('observations','future observations')
axis([0 4300 2.4 4])
plot([1,4250],2.5*[1,1],'k-') % The EODV line.
text(25,2.55,'EODV failure threshold')
axis square
hold off


figure

[f,xf] = ksdensity(second_discharge_time(EOD),...
    'function','pdf','weights',weights_50);
plot(xf, f,'k-', 'linewidth', 2)

xlabel('Time (s)')
ylabel('probability density')
err_early = sum(weights_50.*second_discharge_time(EOD))-3690

sig_early = sqrt(sum(weights_50.*(second_discharge_time(EOD) -...
    3690).^2) )


